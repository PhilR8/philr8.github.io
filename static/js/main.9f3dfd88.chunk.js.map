{"version":3,"sources":["components/CalendarDay/CalendarDay.js","redux/actions.js","components/CalendarDay/CalendarDayContainer.js","utils/dateUtils.js","components/CalendarGrid/CalendarGrid.js","components/AgendaDay/AgendaDay.js","components/AgendaDay/AgendaDayContainer.js","components/AddReminder/AddReminder.js","components/AddReminder/AddReminderContainer.js","components/App/App.js","components/App/AppContainer.js","redux/reducers.js","serviceWorker.js","index.js"],"names":["Reminder","props","react_default","a","createElement","className","classes","reminder","style","backgroundColor","color","Typography_default","variant","format","time","text","CalendarDay","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMouseOver","setState","focused","onMouseOut","state","_this$props","dateObj","calendarDate","reminders","onDayClick","isToday","isSameDay","date","Date","avatarClass","focusedTodayAvatar","todayAvatar","focusedAvatar","dateNumber","onClick","isSameMonth","dayCell","dayCellOutsideMonth","Avatar_default","getDate","remindersContainer","slice","map","i","CalendarDay_Reminder","key","length","Component","withStyles","theme","display","flex","flexDirection","border","cursor","margin","height","width","fontSize","deepPurple","CREATE_REMINDER","DELETE_REMINDER","UPDATE_REMINDER","OPEN_AGENDA","CLOSE_AGENDA","OPEN_ADD_REMINDER","CLOSE_ADD_REMINDER","deleteReminder","type","closeAgenda","openAddReminder","CalendarDayContainer","connect","ownProps","filter","dateFns","sort","b","dispatch","openAgenda","daysArr","DayName","day","DaysRow","daysRow","CalendarGrid_DayName","MonthContainer","monthContainer","calendarCells","CalendarDay_CalendarDayContainer","CalendarGrid","currentDate","today","daysInMonth","getDaysInMonth","firstOfMonth","startOfMonth","lastOfMonth","endOfMonth","firstDayOfMonth","getDay","daysAfter","prevMonthArr","monthArr","nextMonthArr","push","subDays","addDays","concat","getMonthCells","calendarGrid","CalendarGrid_DaysRow","CalendarGrid_MonthContainer","alignItems","justifyContent","flexBasis","flexGrow","flexWrap","onReminderMouseOver","reminderFocused","onReminderMouseOut","onDeleteClick","onEditClick","toolbarBtnClass","toolbarButtonVisible","toolbarButtonHidden","Paper_default","elevation","reminderText","IconButton_default","aria-label","Edit_default","Delete_default","React","AgendaDay","_this$props2","agendaStatus","onClose","Dialog_default","open","isOpen","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","id","closeButton","Close_default","Divider_default","light","DialogContent_default","DialogContentText_default","noRemindersText","AgendaDay_Reminder","minHeight","padding","marginTop","position","right","top","visibility","AgendaDayContainer","AddReminder","onEvent","fn","args","resetState","initialState","handleDateChange","handleTimeChange","handleColorChange","event","target","value","handleReminderTextChange","_this2","addReminderStatus","onAddClick","_this$state","addReminderFormContainer","material_ui_pickers_esm","utils","DateFnsUtils","pickers","label","onChange","FormControl_default","formControl","InputLabel_default","shrink","htmlFor","Select_default","input","Input_default","name","MenuItem_default","TextField_default","placeholder","maxLength","InputLabelProps","defaultValue","FormHelperText_default","characterWarning","DialogActions_default","Button_default","disabled","reminderToUpdate","marginBottom","marginLeft","AddReminderContainer","reminderObj","createReminder","App","prevMonth","nextMonth","onFabAddClick","month","toLocaleString","year","root","calendar","calendarHeader","KeyboardArrowLeft_default","KeyboardArrowRight_default","components_CalendarGrid_CalendarGrid","Fab_default","fabAdd","Add_default","AgendaDay_AgendaDayContainer","AddReminder_AddReminderContainer","bottom","green","&:hover","AppContainer","initialAgendaState","initialAddReminderState","calendarApp","combineReducers","arguments","undefined","action","toConsumableArray","filteredState","oldReminder","updatedReminder","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","App_AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f3dfd88.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { format, isSameMonth, isSameDay, getDate } from 'date-fns';\n\nconst styles = theme => ( {\n    dayCell: {\n        display: 'flex',\n        flex: '1 0 13%',\n        flexDirection: 'column',\n        border: '1px solid lightgray',\n        cursor: 'pointer'\n    },\n    dayCellOutsideMonth: {\n        display: 'flex',\n        flex: '1 0 13%',\n        flexDirection: 'column',\n        border: '1px solid lightgray',\n        backgroundColor: 'rgba( 211, 211, 211, 0.4 )',\n        cursor: 'pointer'\n    },\n    dateNumber: {\n        margin: 5,\n        height: '28px',\n        width: '28px',\n        fontSize: '0.85rem',\n        color: '#000',\n        backgroundColor: 'transparent'\n    },\n    todayAvatar: {\n        margin: 5,\n        height: '28px',\n        width: '28px',\n        fontSize: '0.85rem',\n        color: '#fff',\n        backgroundColor: deepPurple[400],\n    },\n    focusedAvatar: {\n        margin: 5,\n        height: '28px',\n        width: '28px',\n        fontSize: '0.85rem',\n        color: '#000',\n        backgroundColor: '#f1f1f1',\n    },\n    focusedTodayAvatar: {\n        margin: 5,\n        height: '28px',\n        width: '28px',\n        fontSize: '0.85rem',\n        color: '#fff',\n        backgroundColor: deepPurple[800],\n    },\n    reminder: {\n        color: '#000'\n    },\n    remindersContainer: {\n        height: '100%'\n    }\n} );\n\nconst Reminder = ( props ) =>\n    <div className={ props.classes.reminder } style={{ backgroundColor: props.reminder.color }}>\n        <Typography variant='caption'>\n            { format( props.reminder.time, 'H:mmaaaaa' ) }: { props.reminder.text }\n        </Typography>\n    </div>\n\nclass CalendarDay extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            focused: false\n        }\n    }\n\n    onMouseOver = () => {\n        this.setState( { focused: true } );\n    }\n\n    onMouseOut = () => {\n        this.setState( { focused: false } );\n    }\n\n    render() {\n        const { classes, dateObj, calendarDate, reminders, onDayClick } = this.props;\n        const { focused } = this.state;\n        const isToday = isSameDay( dateObj.date, new Date() );\n\n        const avatarClass = isToday && focused\n            ? classes.focusedTodayAvatar\n            : isToday\n                ? classes.todayAvatar\n                : focused\n                    ? classes.focusedAvatar\n                    : classes.dateNumber;\n\n        return (\n            <div\n                onMouseOver={ this.onMouseOver }\n                onMouseOut={ this.onMouseOut }\n                onClick={ () => onDayClick( dateObj ) }\n                className={\n                    isSameMonth( dateObj.date, calendarDate )\n                        ? classes.dayCell\n                        : classes.dayCellOutsideMonth\n                }\n            >\n                <Avatar className={ avatarClass }>{ getDate( dateObj.date ) }</Avatar>\n                <div className={ classes.remindersContainer }>\n                    { reminders\n                        .slice( 0, 3 )\n                        .map( ( reminder, i ) =>\n                            <Reminder key={ i } reminder={ reminder } classes={ classes } />\n                    ) }\n                    { reminders.length > 3 &&\n                        <Typography variant='caption'>\n                            ...and { reminders.length - 3 } more\n                        </Typography>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nCalendarDay.propTypes = {\n    classes: PropTypes.object.isRequired,\n    calendarDate: PropTypes.instanceOf( Date ),\n    dateObj: PropTypes.shape( { date: PropTypes.instanceOf( Date ) } ),\n    reminders: PropTypes.array.isRequired\n}\n\nexport default withStyles( styles )( CalendarDay );\n","// action types\nexport const CREATE_REMINDER = 'ADD_REMINDER';\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\nexport const UPDATE_REMINDER = 'UPDATE_REMINDER';\nexport const OPEN_AGENDA = 'OPEN_AGENDA';\nexport const CLOSE_AGENDA = 'CLOSE_AGENDA';\nexport const OPEN_ADD_REMINDER = 'OPEN_ADD_REMINDER';\nexport const CLOSE_ADD_REMINDER = 'CLOSE_ADD_REMINDER';\n\n// action creators\nexport function createReminder( reminderObj ) {\n    return { type: CREATE_REMINDER, reminderObj };\n}\n\nexport function deleteReminder( date ) {\n    return { type: DELETE_REMINDER, date };\n}\n\nexport function updateReminder( reminderObj ) {\n    return { type: UPDATE_REMINDER, reminderObj };\n}\n\nexport function openAgenda( dateObj ) {\n    return { type: OPEN_AGENDA, dateObj };\n}\n\nexport function closeAgenda() {\n    return { type: CLOSE_AGENDA };\n}\n\nexport function openAddReminder( reminder ) {\n    return { type: OPEN_ADD_REMINDER, reminder };\n}\n\nexport function closeAddReminder() {\n    return { type: CLOSE_ADD_REMINDER }; \n}\n","import { connect } from 'react-redux';\n\nimport CalendarDay from './CalendarDay';\n\nimport { openAgenda } from '../../redux/actions';\n\nimport * as dateFns from 'date-fns';\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const reminders = state.reminders.filter( reminder =>\n        dateFns.isSameDay( reminder.date, ownProps.dateObj.date )\n    )\n    reminders.sort( ( a, b ) => dateFns.getTime( a.time ) - dateFns.getTime( b.time ) );\n    return { reminders };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDayClick: dateObj => {\n            dispatch( openAgenda( dateObj ) )\n        }\n    }\n}\n\nconst CalendarDayContainer = connect( mapStateToProps, mapDispatchToProps )( CalendarDay );\n\nexport default CalendarDayContainer;\n","import { getDaysInMonth, startOfMonth, endOfMonth, getDay, subDays, addDays, } from 'date-fns';\n\nexport const daysArr = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];\nexport const monthsArr = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ];\n\nexport function getMonthCells( currentDate ) {\n    // Six rows of sevel days = 42 calendar cells\n    const totalCells = 42;\n\n    // get current date\n    const today = currentDate;\n\n    // create needed variables\n    const daysInMonth = getDaysInMonth( today );\n    const firstOfMonth = startOfMonth( today );\n    const lastOfMonth = endOfMonth( today );\n    const firstDayOfMonth = getDay( firstOfMonth );\n    const daysAfter = totalCells - ( daysInMonth + firstDayOfMonth );\n\n    // create arrays of date objects needed\n    // to create calendar cells\n    const prevMonthArr = [];\n    const monthArr = [];\n    const nextMonthArr = [];\n\n    // push into the arrays\n    for( let i = firstDayOfMonth; i > 0; i-- ) {\n        prevMonthArr.push( {\n            date: subDays( firstOfMonth, i )\n        } );\n    }\n\n    for( let i = 0; i < daysInMonth; i++ ) {\n        monthArr.push( {\n            date: addDays( firstOfMonth, i )\n        } )\n    }\n\n    for( let i = 0; i < daysAfter; i++ ) {\n        nextMonthArr.push( {\n            date: addDays( lastOfMonth, i + 1 )\n        } )\n    }\n\n    // finally combine into single array\n    const calendarArr = [ ...prevMonthArr, ...monthArr, ...nextMonthArr ]\n\n    return calendarArr;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CalendarDayContainer from '../CalendarDay/CalendarDayContainer';\n\nimport { daysArr, getMonthCells } from '../../utils/dateUtils';\n\nconst styles = theme => ( {\n    calendarGrid: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    daysRow: {\n        display: 'flex',\n        width: '100%',\n        flexBasis: '50px',\n        justifyContent: 'space-evenly',\n        alignItems: 'center'\n    },\n    monthContainer: {\n        display: 'flex',\n        width: '100%',\n        flexGrow: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        border: '1px solid lightgray'\n    }\n} );\n\nconst DayName = ( props ) => <Typography variant='h6'>{ props.day }</Typography>;\n\nDayName.propTypes = {\n    classes: PropTypes.object.isRequired,\n    day: PropTypes.string.isRequired\n}\n\nconst DaysRow = ( props ) =>\n    <div className={ props.classes.daysRow }>\n        { daysArr.map( ( day, i ) =>\n            <DayName classes={ props.classes } key={ i } day={ day } />\n        ) }\n    </div>\n\nDaysRow.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst MonthContainer = ( props ) =>\n    <div className={ props.classes.monthContainer }>\n        { props.calendarCells.map( ( dateObj, i ) =>\n            <CalendarDayContainer key={ i } calendarDate={ props.date } dateObj={ dateObj } />\n        ) }\n    </div>\n\nMonthContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    date: PropTypes.instanceOf( Date ).isRequired,\n    calendarCells: PropTypes.arrayOf( PropTypes.shape( { date: PropTypes.instanceOf( Date ) } ) )\n}\n\nclass CalendarGrid extends Component {\n    render() {\n        const { classes, date } = this.props;\n        const calendarCells = getMonthCells( this.props.date );\n        return (\n            <div className={ classes.calendarGrid }>\n                <DaysRow classes={ classes } />\n                <MonthContainer\n                    classes={ classes }\n                    date={ date }\n                    calendarCells={ calendarCells }\n                />\n            </div>\n        )\n    }\n}\n\nCalendarGrid.propTypes = {\n    classes: PropTypes.object.isRequired,\n    date: PropTypes.instanceOf( Date ).isRequired\n}\n\nexport default withStyles( styles )( CalendarGrid );\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as dateFns from 'date-fns';\n\nconst styles = theme => ( {\n    remindersContainer: {\n        minHeight: '250px'\n    },\n    reminder: {\n        margin: '15px',\n        padding: '15px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    reminderText: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    noRemindersText: {\n        marginTop: '10px'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: '10px',\n        top: '10px'\n    },\n    toolbarButtonHidden: {\n        visibility: 'hidden'\n    },\n    toolbarButtonVisible: {\n        visibility: 'visible'\n    }\n} );\n\nclass Reminder extends React.Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            reminderFocused: false\n        }\n    }\n\n    onReminderMouseOver = () => {\n        this.setState( { reminderFocused: true } );\n    }\n\n    onReminderMouseOut = () => {\n        this.setState( { reminderFocused: false } );\n    }\n\n    render() {\n        const { classes, reminder, onDeleteClick, onEditClick } = this.props;\n        const toolbarBtnClass = this.state.reminderFocused\n            ? classes.toolbarButtonVisible\n            : classes.toolbarButtonHidden;\n\n        return (\n            <Paper\n                className={ classes.reminder }\n                elevation={ 1 }\n                style={{ backgroundColor: reminder.color }}\n                onMouseOver={ this.onReminderMouseOver }\n                onMouseOut={ this.onReminderMouseOut }\n            >\n                <Typography variant='h5' className={ classes.reminderText }>\n                    { dateFns.format( reminder.time, 'H:mmaaaaa' ) }: { reminder.text }\n                </Typography>\n                <div>\n                    <IconButton \n                        className={ toolbarBtnClass } \n                        aria-label='Edit' \n                        onClick={ () => onEditClick( reminder ) }\n                    >\n                        <EditIcon />\n                    </IconButton>\n                    <IconButton \n                        className={ toolbarBtnClass } \n                        aria-label='Delete' \n                        onClick={ () => onDeleteClick( reminder.date ) }\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </div>\n            </Paper>\n\n        )\n    }\n}\n\nReminder.propTypes = {\n    classes: PropTypes.object.isRequired,\n    reminder: PropTypes.shape( {\n        date: PropTypes.instanceOf( Date ),\n        time: PropTypes.instanceOf( Date ),\n        color: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    } ),\n    onDeleteClick: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n}\n\nclass AgendaDay extends React.Component {\n    render() {\n        const { classes, agendaStatus, reminders, onClose, onDeleteClick, onEditClick } = this.props;\n        return (\n            <Dialog\n                open={ agendaStatus.isOpen }\n                onClose={ onClose }\n                aria-labelledby='form-dialog-title'\n                fullWidth={ true }\n                maxWidth='md'\n            >\n                <DialogTitle id='form-dialog-title'>\n                    { agendaStatus.date\n                        ? dateFns.format( agendaStatus.date, 'LLLL do, yyyy' )\n                        : 'Closing' // dialog close animation takes a while - need to figure this out\n                    }\n                    <IconButton aria-label='Close' className={ classes.closeButton } onClick={ onClose }>\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <Divider light />\n                <DialogContent className={ classes.remindersContainer }>\n                    {\n                        reminders.length === 0\n                            ? <DialogContentText className={ classes.noRemindersText }>\n                                No reminders found for this date.\n                              </DialogContentText>\n                            : reminders.map( ( reminder, i ) =>\n                                <Reminder \n                                    key={ i } \n                                    classes={ classes } \n                                    reminder={ reminder } \n                                    onDeleteClick={ onDeleteClick }\n                                    onEditClick={ onEditClick }\n                                />\n                            )\n                    }\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nAgendaDay.propTypes = {\n    classes: PropTypes.object.isRequired,\n    calendarDate: PropTypes.instanceOf( Date ),\n    dateObj: PropTypes.shape( { date: PropTypes.instanceOf( Date ) } ),\n    reminders: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onDeleteClick: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n}\n\nexport default withStyles( styles )( AgendaDay );\n","import { connect } from 'react-redux';\n\nimport AgendaDay from './AgendaDay';\n\nimport { closeAgenda, deleteReminder, openAddReminder } from '../../redux/actions';\n\nimport * as dateFns from 'date-fns';\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const { agendaStatus } = state;\n    const reminders = agendaStatus.isOpen\n        ? state.reminders\n            .filter( reminder => dateFns.isSameDay( reminder.date, agendaStatus.date ) )\n            .sort( ( a, b ) => dateFns.getTime( a.time ) - dateFns.getTime( b.time ) )\n        : [];\n\n    return { reminders, agendaStatus };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onClose: () => {\n            dispatch( closeAgenda() );\n        },\n        onDeleteClick: date => {\n            dispatch( deleteReminder( date ) );\n        },\n        onEditClick: reminder => {\n            dispatch( closeAgenda() );\n            dispatch( deleteReminder( reminder.date ) );\n            dispatch( openAddReminder( reminder ) );\n        }\n    }\n}\n\nconst AgendaDayContainer = connect( mapStateToProps, mapDispatchToProps )( AgendaDay );\n\nexport default AgendaDayContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    DatePicker,\n    TimePicker,\n    MuiPickersUtilsProvider,\n} from 'material-ui-pickers';\n\nconst styles = theme => ( {\n    addReminderFormContainer: {\n        minHeight: '250px',\n        marginTop: '10px',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    pickers: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '15px'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: '10px',\n        top: '10px'\n    },\n    formControl: {\n        flex: '0 0 201px',\n        marginTop: '16px',\n        marginBottom: '8px'\n    },\n    characterWarning: {\n        marginLeft: '8px',\n        color: '#b71c1c'\n    }\n} );\n\nclass AddReminder extends React.Component{\n    constructor( props ) {\n        super( props );\n\n        this.state = this.initialState;\n    }\n\n    static getDerivedStateFromProps( props, state ) {\n        if( props.addReminderStatus.reminder ){\n            const reminderToUpdate = props.addReminderStatus.reminder;\n            // hacky as heck, not supposed to do this\n            // we only want the reminder when the props first change from the redux store,\n            // and after this first change we scrub it out\n            props.addReminderStatus.reminder = null;\n            return reminderToUpdate;\n        }\n        return state;\n    }\n\n    get initialState() {\n        return {\n            date: new Date(),\n            time: new Date(),\n            color: '#f8bbd0',\n            text: ''\n        };\n    }\n\n    onEvent = function( fn, args ) {\n        fn( args );\n        this.resetState();\n    }\n\n    resetState = () => {\n        this.setState( this.initialState );\n    }\n\n    handleDateChange = date => {\n        this.setState({ date: date });\n    };\n\n    handleTimeChange = date => {\n        this.setState({ time: date });\n    }\n\n    handleColorChange = event => {\n        this.setState({ color: event.target.value });\n    }\n\n    handleReminderTextChange = event => {\n        this.setState({ text: event.target.value });\n    }\n\n    render() {\n        const { classes, addReminderStatus, onClose, onAddClick } = this.props;\n        const { date, time, color, text } = this.state;\n\n        return (\n            <Dialog\n                open={ addReminderStatus.isOpen }\n                onClose={ () => this.onEvent( onClose ) }\n                aria-labelledby='form-dialog-title'\n                fullWidth={ true }\n                maxWidth='md'\n            >\n                <DialogTitle id='form-dialog-title'>\n                    Add Reminder\n                    <IconButton aria-label='Close' className={ classes.closeButton } onClick={ () => this.onEvent( onClose ) }>\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <Divider light />\n                <DialogContent className={ classes.addReminderFormContainer }>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <div className={ classes.pickers }>\n                            <DatePicker\n                                margin='normal'\n                                label='Choose Date'\n                                value={ date }\n                                onChange={this.handleDateChange}\n                            />\n                            <TimePicker\n                                margin='normal'\n                                label='Choose Time'\n                                value={time}\n                                onChange={this.handleTimeChange}\n                            />\n                            <FormControl className={classes.formControl}>\n                                <InputLabel shrink htmlFor='color-label-placeholder'>\n                                    Choose Color\n                                </InputLabel>\n                                <Select\n                                    value={color}\n                                    onChange={this.handleColorChange}\n                                    input={<Input name='color' id='color-label-placeholder' />}\n                                    name='color'\n                                >\n                                    <MenuItem value='#f8bbd0'>Red</MenuItem>\n                                    <MenuItem value='#c8e6c9'>Green</MenuItem>\n                                    <MenuItem value='#bbdefb'>Blue</MenuItem>\n                                    <MenuItem value='#fff9c4'>Yellow</MenuItem>\n                                    <MenuItem value='#ffe0b2'>Orange</MenuItem>\n                                    <MenuItem value='#d1c4e9'>Purple</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </MuiPickersUtilsProvider>\n                    <TextField\n                        id='add-reminder-text-field'\n                        label='Add Reminder (max 30 characters)'\n                        style={{ margin: 8 }}\n                        placeholder='Example: Buy Groceries'\n                        margin='normal'\n                        maxLength='30'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        defaultValue={ text }\n                        onChange={ this.handleReminderTextChange }\n                    />\n                    { text.length === 0 &&\n                        <FormHelperText className={ classes.characterWarning } id='add-reminder-helper-text-field'>This field cannot be empty</FormHelperText>\n                    }\n                    { text.length > 30 &&\n                        <FormHelperText className={ classes.characterWarning } id='add-reminder-helper-text-field'>Your reminder is too long by { text.length - 30 } characters.</FormHelperText>\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={ text.length === 0 || text.length > 30 } color='primary' onClick={ () => this.onEvent( onAddClick, this.state ) }>\n                        Add Reminder\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAddReminder.propTypes = {\n    classes: PropTypes.object.isRequired\n    // TODO: onClose callback function\n    // TODO: onAddClick callback function\n}\n\nexport default withStyles( styles )( AddReminder );\n","import { connect } from 'react-redux';\n\nimport AddReminder from './AddReminder';\n\nimport { closeAddReminder, createReminder } from '../../redux/actions';\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const { addReminderStatus } = state;\n\n    return { addReminderStatus };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onClose: () => {\n            dispatch( closeAddReminder() );\n        },\n        onAddClick: reminderObj => {\n            dispatch( createReminder( reminderObj ) );\n        }\n    }\n}\n\nconst AddReminderContainer = connect( mapStateToProps, mapDispatchToProps )( AddReminder );\n\nexport default AddReminderContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport green from '@material-ui/core/colors/green';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as dateFns from 'date-fns';\n\nimport CalendarGrid from '../CalendarGrid/CalendarGrid';\nimport AgendaDayContainer from '../AgendaDay/AgendaDayContainer';\nimport AddReminderContainer from '../AddReminder/AddReminderContainer';\n\nimport './App.css';\n\nconst styles = theme => ( {\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    calendar: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n        margin: '25px',\n        width: '100%',\n        height: '90%'\n    },\n    calendarHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        height: '100px',\n        width: '100%'\n    },\n    fabAdd: {\n        position: 'absolute',\n        bottom: '60px',\n        right: '50px',\n        color: '#FFF',\n        backgroundColor: green[600],\n        '&:hover': {\n            backgroundColor: green[800]\n        }\n    }\n} )\n\nclass App extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            date: new Date()\n        };\n    }\n\n    compnentDidMount() {\n\n    }\n\n    // arrow functions to skip binding in constructor\n    prevMonth = () => {\n        this.setState( { date: dateFns.subMonths( this.state.date, 1 ) } );\n    }\n\n    nextMonth = () => {\n        this.setState( { date: dateFns.addMonths( this.state.date, 1 ) } );\n    }\n\n    render() {\n        const { classes, agendaStatus, onFabAddClick } = this.props;\n        const { date } = this.state;\n\n        const month = date.toLocaleString( 'en-us', { month: 'long' } );\n        const year = dateFns.getYear( date );\n\n        return (\n            <div className={ classes.root }>\n                <Paper className={ classes.calendar }>\n                    <header className={ classes.calendarHeader }>\n                        <IconButton aria-label='Last Month' onClick={ this.prevMonth }>\n                            <KeyboardArrowLeftIcon fontSize='large' />\n                        </IconButton>\n                        <Typography variant='h3'>\n                            { month } { year }\n                        </Typography>\n                        <IconButton aria-label='Next Month' onClick={ this.nextMonth }>\n                            <KeyboardArrowRightIcon fontSize='large' />\n                        </IconButton>\n                    </header>\n                    <CalendarGrid\n                        date={ date }\n                    />\n                    <Fab\n                        aria-label='Add'\n                        className={classes.fabAdd}\n                        onClick={ onFabAddClick }\n                    >\n                        <AddIcon />\n                    </Fab>\n                </Paper>\n                <AgendaDayContainer />\n                <AddReminderContainer />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles( styles )( App );\n","import { connect } from 'react-redux';\n\nimport App from './App';\n\nimport { openAddReminder } from '../../redux/actions';\n\nconst mapStateToProps = ( state, ownProps ) => {\n    return {};\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFabAddClick: () => {\n            dispatch( openAddReminder() );\n        }\n    }\n}\n\nconst AppContainer = connect( mapStateToProps, mapDispatchToProps )( App );\n\nexport default AppContainer;\n","import { combineReducers } from 'redux';\nimport { \n    OPEN_AGENDA,\n    CLOSE_AGENDA,\n    OPEN_ADD_REMINDER,\n    CLOSE_ADD_REMINDER,\n    CREATE_REMINDER,\n    DELETE_REMINDER,\n    UPDATE_REMINDER\n} from './actions';\n\nconst initialAgendaState = {\n    isOpen: false,\n    date: null\n}\n\nconst initialAddReminderState = {\n    isOpen: false,\n    reminder: null\n}\n\nfunction agendaStatus( state = initialAgendaState , action ) {\n    switch( action.type ) {\n        case OPEN_AGENDA:\n            return {\n                isOpen: true,\n                date: action.dateObj.date\n            }\n        case CLOSE_AGENDA:\n            return {\n                isOpen: false,\n                date: null\n            }\n        default: return state\n    }\n}\n\nfunction addReminderStatus( state = initialAddReminderState, action ) {\n    switch( action.type ) {\n        case OPEN_ADD_REMINDER:\n            return {\n                isOpen: true,\n                reminder: action.reminder || null\n            }\n        case CLOSE_ADD_REMINDER:\n            return {\n                isOpen: false,\n                reminder: null\n            }\n        case CREATE_REMINDER:\n            return {\n                isOpen: false,\n                reminder: null\n            }\n        default: return state\n    }\n}\n\nfunction reminders( state = [], action ) {\n    switch ( action.type ) {\n        case CREATE_REMINDER:\n            return [\n                ...state,\n                {\n                    date: action.reminderObj.date,\n                    time: action.reminderObj.time,\n                    color: action.reminderObj.color,\n                    text: action.reminderObj.text\n                }\n            ]\n        case DELETE_REMINDER:\n            return state.filter( reminder => reminder.date !== action.date )\n        case UPDATE_REMINDER:\n            const filteredState = state.filter( reminder => reminder.date !== action.oldReminder.date );\n            return [\n                ...filteredState,\n                {\n                    date: action.updatedReminder.date,\n                    time: action.updatedReminder.time,\n                    color: action.updatedReminder.color,\n                    text: action.updatedReminder.text\n                }\n            ]\n        default: return state\n    }\n}\n\nconst calendarApp = combineReducers( {\n    agendaStatus,\n    addReminderStatus,\n    reminders\n} )\n\nexport default calendarApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppContainer from './components/App/AppContainer';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport calendarApp from './redux/reducers';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst store = createStore( \n    calendarApp,\n    { reminders: [ { date: new Date(), time: new Date(), color: '#f8bbd0', text: 'Your first reminder!' } ] }, // preloaded state\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={ store }>\n        <AppContainer />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}